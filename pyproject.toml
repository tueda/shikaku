[tool.poetry]
name = "shikaku"
version = "0.2.1"
description = "Toolbox for Japanese text."
authors = ["Takahiro Ueda <t.ueda.od@juntendo.ac.jp>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/tueda/shikaku"
keywords = ["japanese", "text-generation", "markov-chain", "word-cloud"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Topic :: Text Processing :: Linguistic",
]

[tool.poetry.dependencies]
python = "^3.10"

igraph = "^0.11.2"
japanize-matplotlib = "^1.1.3"
markovify = "^0.9.4"
matplotlib = "^3.7.1"
mecab-python3 = "^1.0.8"
unidic-lite = "^1.0.8"
wordcloud = "^1.9.2"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.5.0"
pytest = "^7.4.3"
pytest-cov = "^4.1.0"
taskipy = "^1.12.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.report]
exclude_lines = [
    "@overload",
    "if TYPE_CHECKING:",
    "pragma: no cover",
    "raise AssertionError()",
    "return NotImplemented",
]

[tool.flake8]
max-line-length = 88
extend-ignore = [
    "E203", # for black
]
per-file-ignores = [
    "tests/__init__.py:D104",
    "tests/test_*.py:D100,D103,S101",
]

[tool.isort]
profile = "black"

[tool.mypy]
pretty = true
show_error_codes = true
strict = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = [
    "igraph",
    "japanize_matplotlib.*",
    "japanize_matplotlib",
    "markovify.*",
    "markovify",
    "matplotlib.*",
    "MeCab",
    "wordcloud",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
addopts = [
    "--cov-report=html",
    "--cov-report=term",
    "--cov=shikaku",
    "--doctest-modules",
]
filterwarnings = [
    "ignore:distutils Version classes are deprecated",
]

[tool.taskipy.tasks]
prepare.cmd = "pre-commit install"
prepare.help = "sets up a development environment"

lint.cmd = "pre-commit run --all-files"
lint.help = "runs linters (+ fix)"

test.cmd  = "pytest"
test.help = "run tests"
